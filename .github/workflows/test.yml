name: Test

env:
  TEST_BSC_WALLET_PRIVATE_KEY: ${{ secrets.TEST_BSC_WALLET_PRIVATE_KEY }}
  TEST_ETH_WALLET_PRIVATE_KEY: ${{ secrets.TEST_ETH_WALLET_PRIVATE_KEY }}
  TEST_LTC_WALLET_PRIVATE_KEY: ${{ secrets.TEST_LTC_WALLET_PRIVATE_KEY }}
  TEST_BTC_WALLET_PRIVATE_KEY: ${{ secrets.TEST_BTC_WALLET_PRIVATE_KEY }}

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        include:
          - os: ubuntu-latest
            services:
              db:
                image: mysql:latest
                env:
                  MYSQL_ROOT_PASSWORD: root
                  MYSQL_DATABASE: testdb
                ports:
                  - 3306:3306
                options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest pytest-cov
        pip install .[test]

    - name: Run tests and generate coverage
      env:
        DB_HOST: ${{ if matrix.services }}localhost${{ else }}''${{ end }}
        DB_PORT: ${{ if matrix.services }}${{ job.services.db.ports[3306] }}${{ else }}''${{ end }}
        DB_USER: ${{ if matrix.services }}root${{ else }}''${{ end }}
        DB_PASSWORD: ${{ if matrix.services }}root${{ else }}''${{ end }}
        DB_NAME: ${{ if matrix.services }}testdb${{ else }}''${{ end }}
      run: |
        pytest --cov=./ --cov-report=xml

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage.xml